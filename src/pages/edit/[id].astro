---
import Layout from "../../layouts/Layout.astro";
import { app } from "../../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { getAuth } from "firebase-admin/auth";

interface Friend {
  name: string;
  age: number;
  isBestFriend: boolean;
}

const { id } = Astro.params;

// Redirect if no ID is provided
if (!id) {
  return Astro.redirect("/404");
}

// Check for user authentication
let userId: string | null = null;

// Assuming you're storing the user ID in a session cookie
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value ?? "";
  
  const auth = getAuth(app);
  try {
    const decodedToken = await auth.verifySessionCookie(sessionCookie);
    userId = decodedToken.uid; // Extract user ID from the decoded token
  } catch (error) {
    console.error("Error verifying session cookie:", error);
    return Astro.redirect("/login"); // Redirect if the session is invalid
  }
}

if (!userId) {
  return Astro.redirect("/login"); // Redirect to login if no user ID
}

const db = getFirestore(app);
const friendsRef = db.collection("users").doc(userId).collection("friends"); // Pointing to user's friends collection
const friendSnapshot = await friendsRef.doc(id).get();

if (!friendSnapshot.exists) {
  return Astro.redirect("/404");
}

const friend = friendSnapshot.data() as Friend;
---

<Layout title={`Edit ${friend.name}`}>
  <h1>Edit {friend.name}</h1>
  <p>Here you can edit or delete your friend's data.</p>
  <form method="post" action={`/api/friends/${id}`}>
    <label for="name">Name</label>
    <input type="text" id="name" name="name" value={friend.name} required />
    
    <label for="age">Age</label>
    <input type="number" id="age" name="age" value={friend.age} required />
    
    <label for="isBestFriend">Is best friend?</label>
    <input
      type="checkbox"
      id="isBestFriend"
      name="isBestFriend"
      checked={friend.isBestFriend}
    />
    
    <button type="submit">Edit friend</button>
  </form>
  <button type="button" id="delete-document">Delete</button>
</Layout>

<script>
  const deleteButton = document.getElementById("delete-document") as HTMLButtonElement;
  const url = document.querySelector("form")?.getAttribute("action") as string;
  
  deleteButton.addEventListener("click", async () => {
    const response = await fetch(url, {
      method: "DELETE",
    });
    
    if (response.redirected) {
      window.location.assign(response.url);
    } else {
      // Optionally, handle error case
      console.error("Failed to delete friend:", await response.text());
    }
  });
</script>
