---
import Layout from "../../layouts/Layout.astro";
import { app } from "../../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { getAuth } from "firebase-admin/auth";

interface Friend {
  name: string;
  age: number;
  isBestFriend: boolean;
}

const { id } = Astro.params;

// Redirect if no ID is provided
if (!id) {
  return Astro.redirect("/404");
}

// Check for user authentication
let userId: string | null = null;

// Assuming you're storing the user ID in a session cookie
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value ?? "";
  
  const auth = getAuth(app);
  try {
    const decodedToken = await auth.verifySessionCookie(sessionCookie);
    userId = decodedToken.uid; // Extract user ID from the decoded token
  } catch (error) {
    console.error("Error verifying session cookie:", error);
    return Astro.redirect("/login"); // Redirect if the session is invalid
  }
}

if (!userId) {
  return Astro.redirect("/login"); // Redirect to login if no user ID
}

const db = getFirestore(app);
const friendsRef = db.collection("users").doc(userId).collection("friends"); // Pointing to user's friends collection

// Ensure that id is defined before using it
const friendSnapshot = await friendsRef.doc(id).get();

if (!friendSnapshot.exists) {
  return Astro.redirect("/404");
}

const friend = friendSnapshot.data() as Friend;
---

<Layout title={friend.name}>
  <h1>{friend.name}</h1>
  <p>Age: {friend.age}</p>
  <p>Is best friend: {friend.isBestFriend ? "Yes" : "No"}</p>
</Layout>
